/**
 * @file src/chat/history/history.service.ts
 * @description –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ —Ç–∏–ø–∞–º.
 */

import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { ChatMessage, ChatMessageRole, ChatType } from '../entities/chat-message.entity';
import { User } from '../../users/entities/user.entity';
import { Content } from '@google/generative-ai';

@Injectable()
export class ChatHistoryService {
  constructor(
    @InjectRepository(ChatMessage)
    private readonly chatMessageRepository: Repository<ChatMessage>,
    @InjectRepository(User)
    private readonly userRepository: Repository<User>,
  ) { }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ —á–∞—Ç–∞.
   * @param userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param type - –¢–∏–ø —á–∞—Ç–∞ ('chat' –∏–ª–∏ 'document').
   */
  async getHistory(userId: number, type: ChatType): Promise<Content[]> {
    const messages = await this.chatMessageRepository.find({
      where: { user: { id: userId }, type: type }, // <-- –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–∏–ø—É
      order: { createdAt: 'DESC' },
    });

    if (messages.length === 0) return [];

    const sortedMessages = messages.reverse();
    const firstUserIndex = sortedMessages.findIndex(msg => msg.role === ChatMessageRole.USER);
    if (firstUserIndex === -1) return [];

    const validHistory = sortedMessages.slice(firstUserIndex);
    return validHistory.map((msg) => ({
      role: msg.role as 'user' | 'model',
      parts: [{ text: msg.content }],
    }));
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ —á–∞—Ç–∞.
   * @param userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param userContent - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param modelContent - –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏.
   * @param type - –¢–∏–ø —á–∞—Ç–∞.
   */
  async addMessageToHistory(userId: number, userContent: string, modelContent: string, type: ChatType): Promise<void> {
    const user = await this.userRepository.findOneBy({ id: userId });
    if (!user) {
      console.error(`–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}`);
      return;
    }

    const userMessage = this.chatMessageRepository.create({
      user,
      role: ChatMessageRole.USER,
      content: userContent,
      type: type, // <-- –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø
    });

    const modelMessage = this.chatMessageRepository.create({
      user,
      role: ChatMessageRole.MODEL,
      content: modelContent,
      type: type, // <-- –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø
    });

    await this.chatMessageRepository.save([userMessage, modelMessage]);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ —á–∞—Ç–∞.
   * @param userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param type - –¢–∏–ø —á–∞—Ç–∞.
   */
  async getHistoryForUser(userId: number, type: ChatType) {
    const messages = await this.chatMessageRepository.find({
      where: { user: { id: userId }, type: type }, // <-- –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–∏–ø—É
      order: { createdAt: 'ASC' },
    });


    if (messages.length === 0) {
      const user = await this.userRepository.findOneBy({ id: userId });
      if (!user) return [];

      let welcomeMessageContent = '';

      if (type === ChatType.DOCUMENT) {
        welcomeMessageContent =
          `üëã “ö“±–∂–∞—Ç—Ç–∞—Ä-–ñ–ò “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!
      
      –ú–µ–Ω —Å—ñ–∑–¥—ñ“£ “õ“±–∂–∞—Ç—Ç–∞—Ä–¥—ã –∂–∞—Å–∞—É –±–æ–π—ã–Ω—à–∞ –∂–µ–∫–µ –∫”©–º–µ–∫—à—ñ“£—ñ–∑–±—ñ–Ω. –ú–µ–Ω—ñ“£ –º—ñ–Ω–¥–µ—Ç—ñ–º ‚Äî –±—ñ–∑–¥—ñ“£ —à–∞–±–ª–æ–Ω–¥–∞—Ä —Ç—ñ–∑—ñ–º—ñ–Ω–µ–Ω “õ–∞–∂–µ—Ç—Ç—ñ –∞–∫—Ç—ñ–Ω—ñ –Ω–µ–º–µ—Å–µ –µ—Å–µ–ø—Ç—ñ –∂—ã–ª–¥–∞–º ”ô—Ä—ñ “õ–∞—Ç–µ—Å—ñ–∑ –¥–∞–π—ã–Ω–¥–∞—É“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å—É.
      
      ---
      
      ‚öôÔ∏è –ü–†–û–¶–ï–°–° “ö–ê–õ–ê–ô ”®–¢–ï–î–Ü?
      
      –ú–µ–Ω —Å—ñ–∑–≥–µ —Å“±—Ä–∞“õ—Ç–∞—Ä–¥—ã –±—ñ—Ä—Ç—ñ–Ω–¥–µ–ø “õ–æ—è—Ç—ã–Ω –±–æ–ª–∞–º—ã–Ω. –°—ñ–∑–¥—ñ“£ ”ô—Ä–±—ñ—Ä –∂–∞—É–∞–±—ã“£—ã–∑–¥–∞–Ω –∫–µ–π—ñ–Ω, –±–∞—Ä–ª—ã“õ “õ–∞–∂–µ—Ç—Ç—ñ –∞“õ–ø–∞—Ä–∞—Ç –∂–∏–Ω–∞–ª“ì–∞–Ω—à–∞ –∫–µ–ª–µ—Å—ñ —Å“±—Ä–∞“õ—Ç—ã “õ–æ—è–º—ã–Ω. –°–æ“£—ã–Ω–¥–∞ –º–µ–Ω —Å—ñ–∑–≥–µ –¥–∞–π—ã–Ω .docx —Ñ–∞–π–ª—ã–Ω –∂–∞—Å–∞–π–º—ã–Ω! üìÑ
      
      ---
      
      üöÄ “ö–ê–õ–ê–ô –ë–ê–°–¢–ê–£ –ö–ï–†–ï–ö?
      
      1. –ï–≥–µ—Ä “õ–∞–Ω–¥–∞–π “õ“±–∂–∞—Ç –∫–µ—Ä–µ–≥—ñ–Ω –±—ñ–ª—Å–µ“£—ñ–∑:
         –û–Ω—ã“£ –∞—Ç–∞—É—ã–Ω –∂–∞–∑—ã“£—ã–∑.
         –ú—ã—Å–∞–ª: "–ñ“±–º—ã—Å—Ç–∞—Ä–¥—ã “õ–∞–±—ã–ª–¥–∞—É-—Ç–∞–ø—Å—ã—Ä—É –∞–∫—Ç—ñ—Å—ñ –∫–µ—Ä–µ–∫"
      
      2. –ï–≥–µ—Ä —Å–µ–Ω—ñ–º–¥—ñ –±–æ–ª–º–∞—Å–∞“£—ã–∑:
         –ë–∞—Ä–ª—ã“õ “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –Ω“±—Å“õ–∞–ª–∞—Ä–¥—ã –∫”©—Ä—Å–µ—Ç—É–¥—ñ —Å“±—Ä–∞“£—ã–∑.
         –ú—ã—Å–∞–ª: "“ö“±–∂–∞—Ç—Ç–∞—Ä —Ç—ñ–∑—ñ–º—ñ–Ω –∫”©—Ä—Å–µ—Ç"

      3. –ï–≥–µ—Ä –±–∞—Å“õ–∞ “õ“±–∂–∞—Ç –±–∞—Å—Ç–∞“ì—ã“£—ã–∑ –∫–µ–ª—Å–µ:
         –ú–∞“ì–∞–Ω –±“±–ª —Ç—É—Ä–∞–ª—ã —Ö–∞–±–∞—Ä–ª–∞“£—ã–∑.
         –ú—ã—Å–∞–ª: "–ñ–∞“£–∞ “õ“±–∂–∞—Ç –∂–∞—Å–∞“ì—ã–º –∫–µ–ª–µ–¥—ñ"

      ---
      
      ‚ö†Ô∏è –ú–ê“¢–´–ó–î–´ –ê“ö–ü–ê–†–ê–¢:
      
      - –ë–∞—Å —Ç–∞—Ä—Ç—É: –ï–≥–µ—Ä “õ“±–∂–∞—Ç –∂–∞—Å–∞—É–¥–∞–Ω –±–∞—Å —Ç–∞—Ä—Ç—Å–∞“£—ã–∑, "–ë–∞—Å —Ç–∞—Ä—Ç—É" –Ω–µ–º–µ—Å–µ "“ö–∞–∂–µ—Ç –µ–º–µ—Å" –¥–µ–ø –∂–∞–∑—ã“£—ã–∑.
      - –ö–µ“£–µ—Å –∞–ª—É: –ú–µ–Ω —Ç–µ–∫ –¥–∞–π—ã–Ω —à–∞–±–ª–æ–Ω–¥–∞—Ä–¥–∞–Ω “õ“±–∂–∞—Ç—Ç–∞—Ä–¥—ã –∂–∞—Å–∞–π–º—ã–Ω. –ï–≥–µ—Ä —Å—ñ–∑–¥–µ –∂–∞–ª–ø—ã —Å“±—Ä–∞“õ—Ç–∞—Ä –±–æ–ª—Å–∞ (–º—ã—Å–∞–ª—ã, "–ö”©—Ä—à—ñ–ª–µ—Ä —Å—É“ì–∞ –±–∞—Ç—ã—Ä—Å–∞ –Ω–µ —ñ—Å—Ç–µ—É –∫–µ—Ä–µ–∫?"), –æ–ª–∞—Ä–¥—ã "–ñ–ò-–ß–∞—Ç" –±”©–ª—ñ–º—ñ–Ω–¥–µ “õ–æ–π—ã“£—ã–∑. üí¨
      
      ---
      ---
      
      üëã –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ò–ò-–î–û–ö–£–ú–ï–ù–¢–´!
      
      –Ø –≤–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –æ—à–∏–±–æ–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –Ω—É–∂–Ω—ã–π –∞–∫—Ç –∏–ª–∏ –æ—Ç—á–µ—Ç –∏–∑ –Ω–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤.
      
      ---
      
      ‚öôÔ∏è –ö–ê–ö –ü–†–û–•–û–î–ò–¢ –ü–†–û–¶–ï–°–°?
      
      –Ø –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–∞–º –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ–¥–Ω–æ–º—É. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ —è –∑–∞–¥–∞–º —Å–ª–µ–¥—É—é—â–∏–π, –ø–æ–∫–∞ –º—ã –Ω–µ —Å–æ–±–µ—Ä–µ–º –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í –∫–æ–Ω—Ü–µ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –¥–ª—è –≤–∞—Å –≥–æ—Ç–æ–≤—ã–π .docx —Ñ–∞–π–ª! üìÑ
      
      ---
      
      üöÄ –ö–ê–ö –ù–ê–ß–ê–¢–¨?
      
      1. –ï—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≤–∞–º –Ω—É–∂–µ–Ω:
         –ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.
         –ü—Ä–∏–º–µ—Ä: "–ù—É–∂–µ–Ω –∞–∫—Ç –ø—Ä–∏–µ–º–∞-–ø–µ—Ä–µ–¥–∞—á–∏ —Ä–∞–±–æ—Ç"
      
      2. –ï—Å–ª–∏ –≤—ã –Ω–µ —É–≤–µ—Ä–µ–Ω—ã –≤ —Ç–æ—á–Ω–æ–º –Ω–∞–∑–≤–∞–Ω–∏–∏:
         –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.
         –ü—Ä–∏–º–µ—Ä: "–ü–æ–∫–∞–∂–∏ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
      
      3. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –¥—Ä—É–≥–æ–π –¥–æ–∫—É–º–µ–Ω—Ç:
         –ü—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ –æ–± —ç—Ç–æ–º.
         –ü—Ä–∏–º–µ—Ä: "–•–æ—á—É —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç"
         
      ---
      
      ‚ö†Ô∏è –í–ê–ñ–ù–´–ï –ú–û–ú–ï–ù–¢–´:
      
      - –û—Ç–º–µ–Ω–∞: –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ "–ù–µ —Ö–æ—á—É".
      - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: –Ø ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤. –ï—Å–ª–∏ —É –≤–∞—Å –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ñ–ö–• (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∑–∞—Ç–æ–ø–∏–ª–∏ —Å–æ—Å–µ–¥–∏?"), –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –∏—Ö –≤ "–ò–ò-–ß–∞—Ç". üí¨
      `;
      }
      // --- –í–û–¢ –¢–ï–ö–°–¢ –î–õ–Ø –ò–ò-–ß–ê–¢–ê ---
      else if (type === ChatType.GENERAL) {
        welcomeMessageContent = `üëã –ñ–ò-–ß–∞—Ç“õ–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!

–ú–µ–Ω NeoOSI ‚Äî “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥–∞“ì—ã –ü–ò–ö –∂”ô–Ω–µ –¢–ö–® –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ –±–æ–π—ã–Ω—à–∞ —Å—ñ–∑–¥—ñ“£ —Å–∞–Ω–¥—ã“õ –∫”©–º–µ–∫—à—ñ“£—ñ–∑–±—ñ–Ω.

---

ü§ñ –ú–ï–ù “ö–ê–õ–ê–ô –ö”®–ú–ï–ö–¢–ï–°–ï –ê–õ–ê–ú–´–ù?
–ú–µ–Ω “ö–† –∑–∞“£–¥–∞—Ä—ã –º–µ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç—Ç–∞—Ä—ã–Ω–∞ –Ω–µ–≥—ñ–∑–¥–µ–ª–≥–µ–Ω –∂–∞–ª–ø—ã —Å“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑“ì–∞ –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–∞–º—ã–Ω.
–°“±—Ä–∞“õ—Ç–∞—Ä–¥—ã“£ –º—ã—Å–∞–ª–¥–∞—Ä—ã:
- "–ö–æ–Ω–¥–æ–º–∏–Ω–∏—É–º –¥–µ–≥–µ–Ω—ñ–º—ñ–∑ –Ω–µ?"
- "–ü”ô—Ç–µ—Ä –∏–µ—Å—ñ–Ω—ñ“£ –º—ñ–Ω–¥–µ—Ç—Ç–µ—Ä—ñ “õ–∞–Ω–¥–∞–π?"
- "–ö”©—Ä—à—ñ–ª–µ—Ä–¥—ñ“£ —à—É—ã–º–µ–Ω “õ–∞–ª–∞–π –∫“Ø—Ä–µ—Å—É–≥–µ –±–æ–ª–∞–¥—ã?"

---

üìÑ “ö“∞–ñ–ê–¢ –ñ–ê–°–ê–£ –ö–ï–†–ï–ö –ü–ï?
–ï–≥–µ—Ä —Å—ñ–∑–≥–µ –∞–∫—Ç, ”©—Ç—ñ–Ω—ñ—à –Ω–µ–º–µ—Å–µ –µ—Å–µ–ø –¥–∞–π—ã–Ω–¥–∞—É “õ–∞–∂–µ—Ç –±–æ–ª—Å–∞, "–ñ–ò-“ö“±–∂–∞—Ç—Ç–∞—Ä" –±”©–ª—ñ–º—ñ–Ω–µ ”©—Ç—ñ“£—ñ–∑. –û–ª –∂–µ—Ä–¥–µ –º–µ–Ω —Å—ñ–∑–≥–µ –±”ô—Ä—ñ–Ω –∫–µ–∑–µ“£-–∫–µ–∑–µ“£—ñ–º–µ–Ω —Ä–µ—Å—ñ–º–¥–µ—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω.

---
---

üëã –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ò–ò-–ß–ê–¢!

–Ø –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ NeoOSI –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –û–°–ò –∏ –ñ–ö–• –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ.

---

ü§ñ –ß–ï–ú –Ø –ú–û–ì–£ –ü–û–ú–û–ß–¨?
–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–∫–æ–Ω–∞—Ö –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞—Ö –†–ö.
–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
- "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω–¥–æ–º–∏–Ω–∏—É–º?"
- "–ö–∞–∫–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ —É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã?"
- "–ö–∞–∫ –±–æ—Ä–æ—Ç—å—Å—è —Å —à—É–º–æ–º –æ—Ç —Å–æ—Å–µ–¥–µ–π?"

---

üìÑ –ù–£–ñ–ù–û –°–û–ó–î–ê–¢–¨ –î–û–ö–£–ú–ï–ù–¢?
–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∞–∫—Ç, –∑–∞—è–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç—á–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ò–ò-–î–æ–∫—É–º–µ–Ω—Ç—ã". –¢–∞–º —è –ø–æ—à–∞–≥–æ–≤–æ –ø–æ–º–æ–≥—É –≤–∞–º –≤—Å–µ –æ—Ñ–æ—Ä–º–∏—Ç—å.`;
      }

      if (welcomeMessageContent) {
        const welcomeMessage = this.chatMessageRepository.create({
          user,
          role: ChatMessageRole.MODEL,
          content: welcomeMessageContent,
          type: type,
        });
        await this.chatMessageRepository.save(welcomeMessage);
        return [{
          role: welcomeMessage.role,
          content: welcomeMessage.content,
          createdAt: welcomeMessage.createdAt,
        }];
      }
    }

    return messages.map(msg => ({
      role: msg.role,
      content: msg.content,
      createdAt: msg.createdAt,
    }));
  }


  /**
 * –ù–∞—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞ –Ω–∏–º (–ø—É—Å—Ç–æ–µ) —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏.
 * @param userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 *-  @param modelContent - –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
 * @param type - –¢–∏–ø —á–∞—Ç–∞.
 */
  async updateLastModelMessage(userId: number, modelContent: string, type: ChatType): Promise<void> {
    // 1. –ù–∞—Ö–æ–¥–∏–º —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–∏–ø–∞
    const lastMessage = await this.chatMessageRepository.findOne({
      where: {
        user: { id: userId },
        type: type,
      },
      order: { createdAt: 'DESC' },
    });

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É –Ω–µ–≥–æ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
    if (lastMessage && lastMessage.role === ChatMessageRole.USER) {
      // –≠—Ç–æ —É—Å–ª–æ–≤–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
      // –∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –Ω–µ–≥–æ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ.
      // (–í –Ω–∞—à–µ–π –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º user message —Å –ø—É—Å—Ç—ã–º model message,
      // –Ω–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏).

      const modelMessage = this.chatMessageRepository.create({
        user: lastMessage.user,
        role: ChatMessageRole.MODEL,
        content: modelContent,
        type: type,
      });
      await this.chatMessageRepository.save(modelMessage);

    } else if (lastMessage && lastMessage.role === ChatMessageRole.MODEL) {
      // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç –º–æ–¥–µ–ª–∏, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–∏–º –µ–≥–æ
      lastMessage.content = modelContent;
      await this.chatMessageRepository.save(lastMessage);
    } else {
      console.error(`[HistoryService] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ –¥–ª—è userId: ${userId}`);
    }
  }
}